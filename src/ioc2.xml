<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd">


    <bean id="car01" class="com.linjie.bean.Car">
        <property name="name" value="保时捷"></property>
        <property name="color" value="红色"></property>
        <property name="price" value="3000"></property>
    </bean>

    <bean id="myperson" class="com.linjie.bean.Person1">
        <property name="lastname" value="zhangsan"></property>
        <property name="age" value="13"></property>
        <property name="email" value="zhangsan@163.com"></property>
        <property name="gender" value="man"></property>
        <property name="car" ref="car01"></property>
        <property name="books">
            <list>
                <ref bean="book01"></ref>
                <ref bean="book02"></ref>
            </list>
        </property>
        <property name="maps" ref="myMap">
<!--            <map>-->
<!--                <entry key="key01" value="张三"></entry>-->
<!--                <entry key="key02" value="18"></entry>-->
<!--                <entry key="key03" value-ref="book01"></entry>-->
<!--            </map>-->
        </property>
        <property name="properties">
            <props>
                <prop key="username">root</prop>
                <prop key="password">root</prop>
            </props>
        </property>
    </bean>

    <bean id="book01" class="com.linjie.bean.Book">
        <property name="bookname" value="三体"></property>
        <property name="author" value="刘慈欣"></property>
    </bean>
    <bean id="book02" class="com.linjie.bean.Book">
        <property name="bookname" value="西游记"></property>
        <property name="author" value="吴承恩"></property>
    </bean>

    <util:map id="myMap">
        <entry key="key01" value="张三"></entry>
        <entry key="key02" value="18"></entry>
        <entry key="key03" value-ref="book01"></entry>
    </util:map>

    <!-- 级联属性赋值：级联属性（属性的属性） -->
    <bean id = "myperson01" class="com.linjie.bean.Person1">
        <property name="car" ref="car01"></property>
        <property name="car.price" value="90000"></property>
    </bean>

    <!--parent：指定当前bean的配置信息继承于哪个-->
    <bean id="myperson02" class="com.linjie.bean.Person1" parent="myperson">
        <property name="lastname" value="lisi"></property>
    </bean>

    <!--测试bean的作用域，分别创建单实例和多实例的bean
    prototype：多实例的
        1.容器启动默认不会去创建实例bean
        2.获取的时候创建这个bean
        3.每次获取都会创建毅哥新的对象
    singleton：单实例的（默认）
    -->
    <bean id="book03" class="com.linjie.bean.Book" scope="prototype">
    </bean>

    <!--配置通过静态工厂方法创建bean、实例工厂方法创建的bean、FactoryBean-->
    <!--工厂模式：工厂帮我们创建对象：有一个专门帮我们创建对象的类，这个类就是工厂
        AirPlaneFactory.getAirPlane(String jzName)

        静态工厂（不需要创建工厂本身）
        实例工厂（工厂本身创建对象）
    -->
    <!--1.静态工厂-->
    <bean id="airplane01" class="com.linjie.factory.AirPlaneStaticFactory"
    factory-method="getAirPlane">
    <!--可以为方法指定参数-->
        <constructor-arg value="李四"></constructor-arg>
    </bean>

    <!--2、实例工厂使用-->
    <bean id="airPlaneInstanceFactory" class="com.linjie.factory.AirPlaneInstanceFactory" ></bean>

    <!--factory-bean：指定当前对象创建使用哪个工厂-->
    <bean id="airplane02" class="com.linjie.bean.AirPlane" factory-bean="airPlaneInstanceFactory"
          factory-method="getAirPlane">
        <constructor-arg value="王五"></constructor-arg>
    </bean>

    <!--FactoryBean(是spring规定的一个接口)；只要是这个接口的实现类，spring都认为是一个工厂-->
    <bean id="myFactoryBeanImple" class="com.linjie.factory.MyFactoryBeanImple"
</beans>